---

import DescriptionText from '~components/DescriptionText.astro';
import Heading from '~components/Heading.astro';
import WordSection from '~components/WordSection.astro';
import Layout from '~layouts/Layout.astro';
import { getMonthNameFromDate } from '~utils/date-utils';
import { getPageMetadata } from '~utils-client/page-metadata.ts';
import { STRUCTURED_DATA_TYPE } from '~utils-client/schema-utils.ts';
import {
  getWordsFromCollection,
  groupWordsByMonth,
} from '~utils-client/word-data-utils';
import { getAvailableYears, getWordsByYear } from '~utils/word-data-utils';

const { title, description, secondaryText } = getPageMetadata(Astro.url.pathname);

export async function getStaticPaths() {
  const allWords = await getWordsFromCollection();

  const years = getAvailableYears(allWords);

  return years
    .map(year => ({
      params: { year },
      props: { words: getWordsByYear(year, allWords) },
    }))
    .filter(({ props }) => props.words.length > 0);
}

const { year } = Astro.params;
const { words } = Astro.props;
const monthGroups = groupWordsByMonth(year, words);
---

<Layout title={title} description={description} structuredDataType={STRUCTURED_DATA_TYPE.WORD_LIST}>
  <Heading level={1} text={title} secondaryText={secondaryText} />
  <DescriptionText text={description} />
  {Object.entries(monthGroups).map(([monthSlug, monthWords]) => (
    <WordSection
      title={getMonthNameFromDate(monthWords[0].date)}
      href={`/words/${year}/${monthSlug}`}
      words={monthWords}
    />
  ))}
</Layout>
