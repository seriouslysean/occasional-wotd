---
import { format } from 'date-fns';

import Heading from '~components/Heading.astro';
import WordSection from '~components/WordSection.astro';
import Layout from '~layouts/Layout.astro';
import { getPageMetadata } from '~utils-client/page-metadata.ts';
import { STRUCTURED_DATA_TYPE } from '~utils-client/schema-utils.ts';
import {
  getAvailableMonths,
  getAvailableYears,
  getWordsByYear,
  getWordsFromCollection,
} from '~utils-client/word-data-utils';

const { title, description } = getPageMetadata(Astro.url.pathname);

export async function getStaticPaths() {
  const allWords = await getWordsFromCollection();

  const years = getAvailableYears(allWords);

  return years
    .map(year => ({
      params: { year },
      props: { words: getWordsByYear(year, allWords) },
    }))
    .filter(({ props }) => props.words.length > 0);
}

const { year } = Astro.params;
const { words } = Astro.props;
const months = getAvailableMonths(year, words);
---

<Layout title={title} description={description} structuredDataType={STRUCTURED_DATA_TYPE.WORD_LIST}>
  <main class="year-words">
    <Heading level={1} text={year} secondaryText="Words in" />
    {months.map(month => {
      const monthWords = words.filter(word => word.date.substring(4, 6) === month);
      return (
        <WordSection
          title={format(new Date(Number(year), Number(month) - 1), 'MMMM')}
          href={`/words/${year}/${month}`}
          words={monthWords}
        />
      );
    })}
  </main>
</Layout>

<style>
    .year-words {
        max-width: var(--content-width-medium);
        margin: 0 auto;
    }


    .year-words__content {
        width: 100%;
    }
</style>
